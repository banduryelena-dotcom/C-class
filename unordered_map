#include <iostream>
#include <vector>
#include <unordered_map>
#include <string>

using namespace std;

struct Item {
   string name;
   int price;
   vector<int> elements;
   unordered_map<string, unordered_map<string, string>> info;
};

int main()
{ 
    Item cards = {
        "black",
        278,
        {1,2,3,4,5,6,7,8,9,10},
        {
            { "status", { {"solt","yes"}, {"destroi", "no"} } } 
        } 
    };
    Item cars = {
        "black",
        278,
        {10,9,8,7},
        {
            { "status", { {"solt","yes"}, {"destroi", "no"} } } 
        } 
    };
    
    unordered_map<string, string> checkList = { {"oil", "no"}, {"meet", "no"} };
    checkList["cheese"] = "no";
    checkList["bread"]  = "no";
    
    cout << checkList["cheese"] << endl;
    checkList["cheese"] = "yes";
    cout << checkList["cheese"] << endl;
    
    for (size_t i = 0; i < cards.elements.size(); i++) {
        cout << "Size: " << cards.elements.size() << " Element: " << cards.elements[i] << endl;
    }

    // Safer access to nested unordered_map
    if (cars.info.count("status") && cars.info["status"].count("solt")) {
        cout << cars.info["status"]["solt"] << endl;
    } else {
        cout << "solt not found" << endl;
    }

    return 0;
}
